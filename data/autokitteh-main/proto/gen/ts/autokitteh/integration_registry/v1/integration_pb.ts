// @generated by protoc-gen-es v1.5.1 with parameter "target=ts"
// @generated from file autokitteh/integration_registry/v1/integration.proto (package autokitteh.integration_registry.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";

/**
 * @generated from enum autokitteh.integration_registry.v1.Visibility
 */
export enum Visibility {
  /**
   * @generated from enum value: VISIBILITY_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * Visible only to the user who registered the integration (default).
   *
   * @generated from enum value: VISIBILITY_PRIVATE = 1;
   */
  PRIVATE = 1,

  /**
   * Visible to all the users in the owner organization, but only to them.
   *
   * @generated from enum value: VISIBILITY_INTERNAL = 2;
   */
  INTERNAL = 2,

  /**
   * Visible to all the users in the server.
   * TBD: May require coordination/approval with autokitteh personnel.
   *
   * @generated from enum value: VISIBILITY_PUBLIC = 3;
   */
  PUBLIC = 3,
}
// Retrieve enum metadata with: proto3.getEnumType(Visibility)
proto3.util.setEnumType(Visibility, "autokitteh.integration_registry.v1.Visibility", [
  { no: 0, name: "VISIBILITY_UNSPECIFIED" },
  { no: 1, name: "VISIBILITY_PRIVATE" },
  { no: 2, name: "VISIBILITY_INTERNAL" },
  { no: 3, name: "VISIBILITY_PUBLIC" },
]);

/**
 * @generated from message autokitteh.integration_registry.v1.Integration
 */
export class Integration extends Message<Integration> {
  /**
   * @generated from field: string integration_id = 1;
   */
  integrationId = "";

  /**
   * Visible (non-internal) identifier of the integration.
   * Unique in the context of the owner's (org/user) name.
   *
   * @generated from field: string name = 2;
   */
  name = "";

  /**
   * Owning organization or user ID.
   *
   * @generated from field: string owner_id = 3;
   */
  ownerId = "";

  /**
   * @generated from field: autokitteh.integration_registry.v1.Visibility visibility = 4;
   */
  visibility = Visibility.UNSPECIFIED;

  /**
   * Integration gRPC service to which autokitteh can send requests.
   *
   * @generated from field: string api_url = 5;
   */
  apiUrl = "";

  /**
   * User-visible details.
   *
   * @generated from field: string display_name = 6;
   */
  displayName = "";

  /**
   * @generated from field: string description = 7;
   */
  description = "";

  /**
   * @generated from field: string logo_url = 8;
   */
  logoUrl = "";

  /**
   * @generated from field: string homepage_url = 9;
   */
  homepageUrl = "";

  /**
   * @generated from field: string connect_url = 10;
   */
  connectUrl = "";

  /**
   * @generated from field: string api_key = 11;
   */
  apiKey = "";

  /**
   * @generated from field: string signing_key = 12;
   */
  signingKey = "";

  constructor(data?: PartialMessage<Integration>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "autokitteh.integration_registry.v1.Integration";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "integration_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "owner_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "visibility", kind: "enum", T: proto3.getEnumType(Visibility) },
    { no: 5, name: "api_url", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 6, name: "display_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 7, name: "description", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 8, name: "logo_url", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 9, name: "homepage_url", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 10, name: "connect_url", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 11, name: "api_key", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 12, name: "signing_key", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Integration {
    return new Integration().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Integration {
    return new Integration().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Integration {
    return new Integration().fromJsonString(jsonString, options);
  }

  static equals(a: Integration | PlainMessage<Integration> | undefined, b: Integration | PlainMessage<Integration> | undefined): boolean {
    return proto3.util.equals(Integration, a, b);
  }
}

